############################################
# ecmc PLC file to calculate velocity of wheel an output on EL4122 (4..20mA)
# MACROS:
#  DBG               : Debug printouts ('' = printouts, '#' == no debug printouts)
#  PLC_ID            : Id of this PLC
#  CYCLE_TIME_S      : PLC cycle time
#
# Author: Anders SandstrÃ¶m 2022-05-03
# 

# Scale to degrees
static.pos:=ec0.s1.positionActual01*360/2097152;

#println('Encoder pos: ',static.pos);

ec0.s1.encoderValue01:=0;

static.dist:=static.pos-static.oldPos;

if(abs(static.pos-static.oldPos)>200) {
    if(static.oldPos>static.pos) {
        # overflow
        static.dist:=360-static.oldPos+static.pos;
    } else {
        # undeflow
        static.dist:=static.oldPos+static.pos-360;
    };
};

static.velo:=static.dist/360*60/${CYCLE_TIME_S};
#println('******************************');
#println('Encoder pos : ',static.pos);
#println('Encoder dist: ',static.dist);

# Absolute value of velo to analog output 
# 0 = 4mA, 32767 = 20mA (scale 0..30rpm),
static.veloToOutput:=static.velo;
if(static.velo < 0) {
  static.veloToOutput:=-static.velo;
};
if(static.velo > 30 or static.velo < -30) {
  static.veloToOutput:=30;
};

ec0.s3.analogOutput01:=static.veloToOutput/30.0*32767;

#println('Encoder velo: ',static.velo, ' raw 01: ', ec0.s3.analogOutput01);

static.oldPos:=static.pos;
